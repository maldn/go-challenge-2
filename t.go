package main

import (
	"log"

	"golang.org/x/crypto/nacl/box"
)

var nonce = [24]byte{0xf7, 0x93, 0xcb, 0x41, 0x3b, 0x30, 0x97, 0xae, 0xf, 0x33, 0x5f, 0xee, 0x15, 0x40, 0x81, 0xfc, 0x87, 0x43, 0xdd, 0xc4, 0x5d, 0x11, 0x88, 0x6e}

var enc = []byte{0x52, 0x6f, 0x27, 0x2f, 0x82, 0x1f, 0x87, 0x93, 0x4e, 0x4e, 0xd2, 0xf3, 0x5f, 0xc3, 0xf6, 0x1c, 0x73, 0x79, 0xc8, 0xcd, 0x39, 0xb5, 0x82, 0x91, 0xb, 0x86, 0x13, 0x10}

var write_pub = [32]byte{0x54, 0xc4, 0x36, 0xbc, 0x29, 0x9, 0x94, 0x5a, 0x58, 0xe3, 0xf3, 0x8f, 0x57, 0x4e, 0xdc, 0x69, 0xc7, 0xee, 0x6a, 0x13, 0x66, 0xa4, 0x49, 0x98, 0x7b, 0x2a, 0x9b, 0x99, 0xd4, 0xcf, 0x69, 0x4a}
var write_priv = [32]byte{0xe, 0x5b, 0xca, 0xa0, 0xd2, 0xcc, 0xe7, 0xfd, 0x7e, 0xe7, 0x3, 0xfe, 0xa8, 0xa0, 0x9f, 0x4e, 0x1e, 0x3f, 0x8, 0x5c, 0xf8, 0x5e, 0xbe, 0xde, 0xd5, 0xa3, 0x85, 0x37, 0x5e, 0xbf, 0x57, 0x9b}

var read_pub = [32]byte{0x54, 0xc4, 0x36, 0xbc, 0x29, 0x9, 0x94, 0x5a, 0x58, 0xe3, 0xf3, 0x8f, 0x57, 0x4e, 0xdc, 0x69, 0xc7, 0xee, 0x6a, 0x13, 0x66, 0xa4, 0x49, 0x98, 0x7b, 0x2a, 0x9b, 0x99, 0xd4, 0xcf, 0x69, 0x4a}
var read_priv = [32]byte{0x91, 0x6e, 0xba, 0xac, 0x87, 0xf6, 0xbd, 0xbb, 0x52, 0x90, 0x21, 0xe8, 0x80, 0x78, 0x22, 0xea, 0xe6, 0xaa, 0x87, 0xba, 0xe3, 0x22, 0xfa, 0xe5, 0xd6, 0x84, 0x81, 0x78, 0xdd, 0x2b, 0x8a, 0x51}

func main() {

	bobs_message := "hello world\n"
	//bobs_box := box.Seal(nil, []byte(bobs_message), &nonce, read_pub, write_priv)
	decrypted, success := box.Open(nil, enc, &nonce, &write_pub, &write_priv)

	if success != true || string(decrypted) != bobs_message {
		log.Fatalf("error decrypting.\nexpected '%s'\ngot '%s'", string(decrypted), bobs_message)
	}

}
